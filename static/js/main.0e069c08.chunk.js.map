{"version":3,"sources":["Register/Register.js","constants.js","EmployeeView/Header/Header.js","Firebase/firebase.js","Firebase/firebaseService.js","EmployeeView/Report/Report.js","EmployeeView/Profile/Card/Card.js","EmployeeView/Profile/Profile.js","EmployeeView/App.js","HRView/Header/header.js","HRView/Report/report.js","HRView/HRPageResolved/hrpageresolved.js","HRView/HRPage/HRPage.js","HRView/Dashboard/Dashboard.js","HRView/App.js","Callback/Callback.js","Auth0/auth0-variables.js","Auth0/Auth.js","App.js","serviceWorker.js","index.js","EmployeeView/Header/anothaone.png","HRView/Header/anothaone.png","Callback/loading.svg"],"names":["Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","meta","name","user_id","isHr","props","auth","updateMetadata","alert","key","value","_this2","react_default","a","createElement","className","htmlFor","id","placeholder","onChange","evt","handleChange","currentTarget","type","checked","onClick","updateUser","React","Component","ROUTES","login","callback","register","employee","landing","profile","empReport","hr","hrPage","dashboard","hrReport","hrResolved","url","Header","src","logo","alt","NavLink","to","activeClassName","logout","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","FirebaseService","db","firestore","collection","data","add","where","get","then","snapshot","forEach","snap","push","defineProperty","status","newstatus","doc","update","console","log","Report","checkDate","curr","moment","Date","state","userType","toDashboard","reportInfo","datetime","location","harasser","description","reportType","user","undefined","subscribe","user_metadata","_this3","format","setState","_this4","Redirect","DateTime_default","utc","isValidDate","aria-describedby","selected","disabled","hidden","field","rows","fileReport","Card","desc","time","Profile","fetchData","map","row","content","keys","Profile_Card_Card","EmpApp","isAuthenticated","setEmployeeType","EmployeeView_Header_Header","Route","path","render","EmployeeView_Report_Report","assign","EmployeeView_Profile_Profile","HashRouter","exact","report_SingleReport","SingleReport","report_Form","Form","firstval","val","bind","assertThisInitialized","handleSubmit","e","target","event","preventDefault","updateStatus","onSubmit","date","HRPage","Switch","component","hrpageresolved_ResolvedTable","ResolvedTable","shouldRedirect","createRows","selectedStatus","selectedDate","selectedName","selectedType","selectedDesc","selectedKey","currentRows","getByStatus","_loop","currKey","i","document","rowid","currStatus","currName","currDate","currType","currDescription","handleClick","replace","handleData","pathname","HRPage_ReportTable","ReportTable","statuses","j","Dashboard","initViz","vizContainer","window","tableau","Viz","ref","div","HRApp","getIsHr","header_Header","HRPageResolved","Callback","style","position","display","justifyContent","height","width","top","bottom","left","right","backgroundColor","loading","AUTH_CONFIG","domain","clientId","callbackUrl","tokenUrl","Auth","BehaviorSubject","auth0","WebAuth","clientID","redirectUri","responseType","scope","localHr","localStorage","getItem","handleAuthentication","getAccessToken","getIdToken","renewSession","empType","setItem","authorize","audience","parseHash","hash","split","err","authResult","accessToken","idToken","setSession","href","error","concat","expiresAt","expiresIn","getTime","getManagement","client","userInfo","userId","sub","auth0Manage","getUser","fullUser","next","checkFirstLogin","checkSession","error_description","removeItem","return_to","origin","metadata","patchUserMetadata","res","Management","token","App","splitUrl","includes","src_Register_Register","EmployeeView_App","src_HRView_App","_ref","test","src_Callback_Callback","loginStyle","alignItems","Boolean","hostname","match","ReactDOM","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0e069c08.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Register.scss'\r\n\r\nclass Register extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.meta = {\r\n            name: '',\r\n            user_id: '',\r\n            isHr: false\r\n        }\r\n    }\r\n    updateUser() {\r\n        if (!this.meta.name) {\r\n            alert(\"Please enter a valid name\");\r\n        } else {\r\n            if (!this.meta.user_id) {\r\n                delete this.meta.user_id;\r\n            }\r\n            this.props.auth.updateMetadata(this.meta);\r\n        }\r\n    }\r\n    handleChange(key, value) {\r\n        this.meta[key] =  value;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"backdrop bg-dark\">\r\n                <div className=\"register card\">\r\n                    <p className=\"register-info\">First, we just need to collect some information from you.</p>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"nameInput\">Name</label>\r\n                        <input className=\"form-control\" id=\"nameInput\" placeholder=\"First Last\" \r\n                                onChange={evt => this.handleChange(\"name\", evt.currentTarget.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"idInput\">Employee ID</label>\r\n                        <input className=\"form-control\" id=\"idInput\" placeholder=\"If applicable\"\r\n                                onChange={evt => this.handleChange(\"user_id\", evt.currentTarget.value)}/>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"hrCheck\" value=\"isHr\"\r\n                                onChange={evt => this.handleChange(\"isHr\", evt.currentTarget.checked)}/>\r\n                        <label className=\"form-check-label\" htmlFor=\"hrCheck\">HR Employee</label>\r\n                    </div>\r\n                    <div className=\"btn-div\">\r\n                        <button className=\"btn btn-primary\" onClick={() => this.updateUser()}>Register</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","export const ROUTES = {\r\n    login: \"/\",\r\n    callback: \"/callback\",\r\n    register: \"/register\",\r\n    employee: \"/employee\",\r\n    landing: \"/employee/about\",\r\n    profile: \"/employee/profile\",\r\n    empReport: \"/employee/report\",\r\n    hr: \"/hr\",\r\n    hrPage: \"/hr/hrpage\",\r\n    dashboard: \"/hr/dashboard\",\r\n    hrReport: \"/hr/report-page\",\r\n    hrResolved: \"/hr/resolved\",\r\n    url: process.env.NODE_ENV === 'development' ? 'http://localhost:3000/' : 'https://lukepallen.github.io/workSafe/'\r\n}","import React from 'react';\r\nimport './Header.scss';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {ROUTES} from \"../../constants\";\r\nimport logo from './anothaone.png'\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"empHeader\">\r\n                <div className=\"title\">\r\n                    <img src={logo} alt=\"Logo\"/>\r\n                </div>\r\n                <div className=\"navbar\">\r\n                    <NavLink to={ROUTES.empReport} activeClassName=\"selected\" className=\"link\">Report</NavLink>\r\n                    <NavLink to={ROUTES.profile} activeClassName=\"selected\" className=\"link\">Profile</NavLink>\r\n                    <button className=\"btn btn-outline-primary logoutBtn\" onClick={() => this.props.auth.logout()}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import firebase from 'firebase';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyDNjt0ZQR50uFWwvHiLMs3dR3OckvzteLo\",\r\n    authDomain: \"worksafe-630dd.firebaseapp.com\",\r\n    databaseURL: \"https://worksafe-630dd.firebaseio.com\",\r\n    projectId: \"worksafe-630dd\",\r\n    storageBucket: \"worksafe-630dd.appspot.com\",\r\n    messagingSenderId: \"866713004286\"\r\n  };\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config);\r\n}\r\n\r\nexport default firebase;","import firebase from './firebase';\r\n\r\nexport default class FirebaseService {\r\n    constructor() {\r\n        this.db = firebase.firestore().collection(\"reports\");\r\n    }\r\n\r\n    add(data) {\r\n        return this.db.add(data);\r\n    }\r\n\r\n    get(name) {\r\n        let data = []\r\n        return this.db.where(\"name\", \"==\", name).get().then(\r\n            snapshot => {\r\n                snapshot.forEach(snap => data.push({[snap.id]: snap.data()}));\r\n                return data;\r\n            }\r\n        );\r\n    }\r\n\r\n    getAll() {\r\n        let data = []\r\n        return this.db.get().then(\r\n            snapshot => {\r\n                snapshot.forEach(snap => data.push({[snap.id]: snap.data()}));\r\n                return data;\r\n            }\r\n        );\r\n    }\r\n\r\n    \r\n    getByStatus(status) {\r\n        let data = []\r\n        return this.db.where(\"status\", \"==\", status).get().then(\r\n            snapshot => {\r\n                snapshot.forEach(snap => data.push({[snap.id]: snap.data()}));\r\n                return data;\r\n            }\r\n        );\r\n    }\r\n\r\n    updateStatus(key, newstatus) {\r\n        return this.db.doc(key).update({\r\n            status : newstatus\r\n        }).then(function(){\r\n            console.log(\"Updated to\" + newstatus)\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport DateTime from 'react-datetime';\r\nimport FirebaseService from '../../Firebase/firebaseService';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {ROUTES} from '../../constants';\r\nimport moment  from 'moment';\r\nimport './Report.scss';\r\nimport '../DateTime.scss';\r\n\r\n\r\nclass Report extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType: '',\r\n            toDashboard: false\r\n        }\r\n        this.reportInfo = {\r\n            name: '',\r\n            datetime: '',\r\n            location: '',\r\n            type: '',\r\n            harasser: '',\r\n            description: '',\r\n            status: \"Awaiting Review\",\r\n            reportType: ''\r\n        }\r\n        this.firebase = new FirebaseService();\r\n        this.user = undefined;\r\n    }\r\n    componentDidMount() {\r\n        this.props.auth.user.subscribe(user => {\r\n            this.user = user;\r\n            this.reportInfo.name = this.user.user_metadata.name;\r\n        })\r\n    }\r\n    handleChange(key, value) {\r\n        this.reportInfo[key] =  value;\r\n    }\r\n    checkDate = (curr) => curr - moment(new Date()) <= 0;\r\n    fileReport() {\r\n        this.reportInfo[\"timeFiled\"] = moment().format();\r\n        this.firebase.add(this.reportInfo).then(\r\n            () => this.setState({toDashboard: true})\r\n        )\r\n    }\r\n    render() {\r\n        if (this.state.toDashboard === true) {\r\n            return <Redirect to={ROUTES.profile}/>\r\n        }\r\n        return (\r\n            <div className=\"report\">\r\n                {!this.state.userType ? \r\n                <div className=\"select\">\r\n                    <div className=\"select-btns\">\r\n                        <button className=\"btn btn1\" onClick={() => {this.setState({\"userType\": \"bystander\"}); this.reportInfo.reportType = \"bystander\";}}>Bystander</button>\r\n                        <button className=\"btn btn1\" onClick={() => {this.setState({\"userType\": \"firstHand\"}); this.reportInfo.reportType = \"first hand\";}}>First Hand</button>\r\n                    </div>\r\n                </div> \r\n                : \r\n                <div className=\"buffer\">\r\n                    <div className=\"empForm\">\r\n                        <div className=\"name formSection\">\r\n                            <p className=\"label\">Name</p>\r\n                            <p>{this.reportInfo.name}</p>\r\n                        </div>\r\n                        <div className=\"dateTime formSection short\">\r\n                            <div className=\"date\">\r\n                                <p className=\"label\">Date and Approximate Time of Occurence</p>\r\n                                <DateTime onChange={value => this.handleChange(\"datetime\", moment.utc(value).format())} isValidDate={this.checkDate} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"location formSection short\">\r\n                            <p className=\"label\">Location</p>\r\n                            <input type=\"text\" className=\"form-control form-control-sm\" aria-describedby=\"locationInput\"\r\n                                    onChange={evt => this.handleChange(\"location\", evt.currentTarget.value)}></input>\r\n                        </div>\r\n                        <div className=\"type formSection short\">\r\n                            <p className=\"label\">Type of Harassment</p>\r\n                            <select type=\"text\" className=\"form-control form-control-sm\"\r\n                                    onChange={evt => this.handleChange(\"type\", evt.currentTarget.value)}>\r\n                                <option value=\"\" selected disabled hidden>Select Harassment Type</option>\r\n                                <option>Sexual Harassment</option>\r\n                                <option>Workplace Bullying</option>\r\n                                <option>Retaliation</option>\r\n                                <option>Ageism</option>\r\n                                <option>Racial Harassment</option>\r\n                                <option>Disability-Based Harassment</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"harasser formSection short\">\r\n                            <p className=\"label\">Harasser</p>\r\n                            <input type=\"text\" className=\"form-control form-control-sm\" aria-describedby=\"harasserInput\"\r\n                                    onChange={evt => this.handleChange(\"harasser\", evt.currentTarget.value)}></input>\r\n                        </div>\r\n                        <div className=\"bystander formSection short\">\r\n                            <p className=\"label\">{this.state.userType === 'bystander' ? \"Parties \": \"Bystanders\"} Present </p>\r\n                            <input type=\"text\" className=\"form-control form-control-sm\" aria-describedby=\"bystanderInput\"\r\n                                    onChange={evt => {\r\n                                        let field = this.state.userType === 'bystander' ? \"parties \": \"bystanders\"\r\n                                        this.handleChange(field, evt.currentTarget.value)\r\n                                    }}></input>\r\n                        </div>\r\n                        <div className=\"description formSection\">\r\n                            <p className=\"label\">Description</p>\r\n                            <textarea type=\"text\" className=\"form-control form-control-sm\" rows=\"2\"\r\n                                    onChange={evt => this.handleChange(\"description\", evt.currentTarget.value)}></textarea>\r\n                        </div>\r\n                        <div className=\"evidence formSection short\">\r\n                            <p className=\"label\">Additional Evidence</p>\r\n                            <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"submit\">\r\n                        <button className=\"btn submitBtn\" onClick={() => this.fileReport()}>Submit</button>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Report;","import React from 'react';\r\nimport './Card.scss'\r\nimport moment from 'moment';\r\n\r\nclass Card extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <p className=\"label\">Status:</p>\r\n                <p className=\"content\">{this.props.status}</p>\r\n                <p className=\"label\">Description:</p>\r\n                <p className=\"content\">{this.props.desc}</p>\r\n                <p className=\"label\">Date and Time of Occurence:</p>\r\n                <p className=\"content\">{moment(this.props.time).format(\"LLLL\")}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './Profile.scss'\r\nimport FirebaseService from '../../Firebase/firebaseService';\r\nimport Card from './Card/Card';\r\n\r\nclass Profile extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            rows: [],\r\n        };\r\n        this.firebase = new FirebaseService();\r\n        this.user = undefined;\r\n    }\r\n    componentDidMount() {\r\n        this.props.auth.user.subscribe(user => {\r\n            this.user = user;\r\n            this.fetchData();\r\n        })\r\n    }\r\n    fetchData() {\r\n        this.firebase.get(this.user.user_metadata.name).then(data => {\r\n            let rows = data.map(row => {\r\n                let content\r\n                Object.keys(row).forEach(key => content = row[key])\r\n                return content\r\n            });\r\n            this.setState({\"rows\": rows});\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"reports\">\r\n                    <p className=\"label\">Reports Filed</p>\r\n                    <div>\r\n                        {\r\n                            this.state.rows.length !== 0 ? \r\n                            this.state.rows.map(row => \r\n                                <Card desc={row.description} time={row.datetime} status={row.status}></Card>\r\n                            ) :\r\n                            <p>Go to the report tab to file a report</p>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport {HashRouter as Redirect, Route} from 'react-router-dom';\r\nimport {ROUTES} from '../constants';\r\nimport Header from './Header/Header';\r\nimport Report from './Report/Report';\r\nimport Profile from './Profile/Profile';\r\n\r\nclass EmpApp extends Component {\r\n    render() {\r\n      if (!this.props.auth.isAuthenticated()) {\r\n        this.props.auth.setEmployeeType('employee');\r\n        this.props.auth.login();\r\n      }\r\n      return (\r\n        <div className=\"body\">\r\n          <div>\r\n            <Header auth={this.props.auth}></Header>\r\n          </div>\r\n          <div className=\"main\">\r\n            <Route path={ROUTES.empReport} render={(props) => <Report auth={this.props.auth} {...props}/>}/>\r\n            <Route path={ROUTES.profile} render={(props) => <Profile auth={this.props.auth} {...props}/>}/>\r\n            <Redirect to={ROUTES.empReport}></Redirect>\r\n            \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n\r\nexport default EmpApp;","import React, { Component } from 'react';\r\nimport './header.scss'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {ROUTES} from \"../../constants\";\r\nimport logo from './anothaone.png'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <img src={logo} alt=\"Logo\" />\r\n                </div>\r\n                <div className=\"tabs\">\r\n                    <NavLink to={ROUTES.hrPage} activeClassName=\"selected\" className=\"link\">Pending Reports</NavLink>\r\n                    <NavLink exact={true} to={ROUTES.dashboard} activeClassName=\"selected\" className=\"link\">Dashboard</NavLink>\r\n                    <NavLink to={ROUTES.hrResolved} activeClassName=\"selected\" className=\"link\">Resolved Reports</NavLink>\r\n                    <button className=\"btn btn-outline-primary logoutBtn\" onClick={() => this.props.auth.logout()}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './report.scss';\r\nimport FirebaseService from '../../Firebase/firebaseService';\r\n\r\nexport default class Report extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <SingleReport data={this.props.location.state}></SingleReport>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SingleReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Form data={this.props.data}></Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Form extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.firebase = new FirebaseService();\r\n        this.state = {\r\n            firstval: this.props.data.status,\r\n            val : this.props.data.status\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            val: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            firstval: this.state.val\r\n        })\r\n        this.firebase.updateStatus(this.props.data.key, this.state.val);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"form\">\r\n                <div id=\"header\">\r\n                    <h3>\r\n                    Report Name\r\n                    </h3>\r\n                    <form onChange={this.handleChange} onSubmit={this.handleSubmit} value={this.state.val}>\r\n                        <select>\r\n                            <option value=\"Validated\">Validated</option>\r\n                            <option value=\"Awaiting Review\">Awaiting Review</option>\r\n                            <option value=\"Mediation\">Mediation</option>\r\n                            <option value=\"Corrective Action\">Corrective Action</option>\r\n                            <option value=\"Final Investigative Report Submitted\">Final Investigative Report Submitted</option>\r\n                            <option value=\"Resolved\">Resolved</option>\r\n                        </select>\r\n                        <input type=\"submit\" value=\"submit\" />\r\n                    </form>\r\n                </div>\r\n                <div className=\"responses\">\r\n                    <div className=\"group\">\r\n                        <div className=\"reponse\"> Name:\r\n                            <p className=\"replies\"> {this.props.data.name} </p>\r\n                        </div>\r\n                        <div className=\"reponse\"> Date:\r\n                            <p className=\"replies\"> {this.props.data.date} </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <div className=\"reponse\"> Type: \r\n                            <p className=\"replies\"> {this.props.data.type} </p>\r\n                        </div>\r\n                        <div className=\"reponse\"> Description:\r\n                            <p className=\"replies\"> {this.props.data.description} </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <div className=\"reponse\"> Your Response:\r\n                            <p className=\"replies\"> {this.state.firstval} </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './hrpageresolved.scss';\r\nimport Report from '../Report/report.js';\r\nimport {ROUTES} from '../../constants';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport FirebaseService from '../../Firebase/firebaseService';\r\n\r\nexport default class HRPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route path={ROUTES.hrReport} component={Report}></Route>\r\n                </Switch>\r\n                <ResolvedTable></ResolvedTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass ResolvedTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            shouldRedirect: false,\r\n            rows: []\r\n        };\r\n        this.firebase = new FirebaseService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createRows();\r\n    }\r\n\r\n    handleClick(status, name, datetime, type, description, key) {\r\n        this.setState({\r\n            shouldRedirect: true,\r\n            selectedStatus: status,\r\n            selectedDate: datetime,\r\n            selectedName: name,\r\n            selectedType: type,\r\n            selectedDesc: description,\r\n            selectedKey: key\r\n        });\r\n    };\r\n\r\n    handleData(currentRows) {\r\n        this.setState({rows: currentRows});\r\n    }\r\n\r\n    createRows() {\r\n        let currentRows = []\r\n        this.firebase.getByStatus(\"Resolved\").then(\r\n            snap => {\r\n                for (var i in snap) {\r\n                    let currKey = \"\";\r\n                    currKey = (Object.keys(snap[i]))[0];\r\n                    let document = snap[i][currKey]\r\n                    var rowid = \"t2row\" + i;\r\n                    let currStatus = document.status;\r\n                    let currName = document.name;\r\n                    let currDate = document.datetime;\r\n                    let currType = document.type;\r\n                    let currDescription = document.description;\r\n                    currentRows.push(\r\n                        <button key={rowid} onClick={() => this.handleClick(currStatus, currName, currDate, currType, currDescription, currKey)}>\r\n                            <div className={\"rows \" + (document.reportType === \"bystander\" ? \"bystander\" : \"firstHand\")}>\r\n                                <div className=\"content\">\r\n                                    <div className=\"head\">\r\n                                        <h2> {currName} </h2>\r\n                                        <p className={currStatus.replace(/\\s+/g, '')}> {currStatus} </p>\r\n                                    </div>\r\n                                        <p className=\"date\"> {currDate} </p>\r\n                                        <p className=\"type\"> {currType} </p>\r\n                                </div>\r\n                            </div>\r\n                        </button>\r\n                    )\r\n                }\r\n                this.handleData(currentRows);\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.state.shouldRedirect) {\r\n            return <Redirect push to={{\r\n                pathname: ROUTES.hrReport,\r\n                state: { \r\n                    name: this.state.selectedName,\r\n                    status: this.state.selectedStatus,\r\n                    date: this.state.selectedDate,\r\n                    type: this.state.selectedType,\r\n                    description: this.state.selectedDesc,\r\n                    key: this.state.selectedKey\r\n                }\r\n            }} />\r\n        }\r\n        return (\r\n            <div id=\"table2\">\r\n                {this.state.rows}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './HRPage.scss';\r\nimport Report from '../Report/report.js';\r\nimport {ROUTES} from '../../constants';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport FirebaseService from '../../Firebase/firebaseService';\r\n\r\nexport default class HRPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route path={ROUTES.hrReport} component={Report}></Route>\r\n                </Switch>\r\n                <ReportTable></ReportTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ReportTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            shouldRedirect: false,\r\n            rows: [],\r\n            selectedName: \"\",\r\n            selectedDate: null,\r\n            selectedStatus: \"\",\r\n            selectedType: \"\"\r\n        };\r\n        this.firebase = new FirebaseService();\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(status, name, datetime, type, description, key) {\r\n        this.setState({\r\n            shouldRedirect: true,\r\n            selectedStatus: status,\r\n            selectedDate: datetime,\r\n            selectedName: name,\r\n            selectedType: type,\r\n            selectedDesc: description,\r\n            selectedKey: key\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.createRows();\r\n    }\r\n\r\n    handleData(currentRows) {\r\n        this.setState({rows: currentRows});\r\n    }\r\n\r\n    createRows() {\r\n        let currentRows = []\r\n        let statuses = [\"Awaiting Review\", \"Validated\", \"Mediation\", \"Corrective Action\", \"Final Investigative Report Submitted\"];\r\n        for (var j = 0; j < statuses.length; j++) {\r\n            this.firebase.getByStatus(statuses[j]).then(\r\n                snap => {\r\n\r\n                    for (var i in snap) {\r\n                        let currKey = \"\";\r\n                        currKey = (Object.keys(snap[i]))[0];\r\n                        let document = snap[i][currKey]\r\n                        var rowid = \"t1row\" + document.datetime + i;\r\n                        let currStatus = document.status;\r\n                        let currName = document.name;\r\n                        let currDate = document.datetime;\r\n                        let currType = document.type;\r\n                        let currDescription = document.description;\r\n                        console.log(document);\r\n                        currentRows.push(\r\n                            <button key={rowid} onClick={() => this.handleClick(currStatus, currName, currDate, currType, currDescription, currKey)}>\r\n                                <div className={\"rows \" + (document.reportType === \"bystander\" ? \"bystander\" : \"firstHand\")}>\r\n                                    <div className=\"content\">\r\n                                        <div className=\"head\">\r\n                                            <h2> {currName} </h2>\r\n                                            <p className={currStatus.replace(/\\s+/g, '')}> {currStatus} </p>\r\n                                        </div>\r\n                                        <p className=\"date\"> {currDate} </p>\r\n                                        <p className=\"type\"> {currType} </p>\r\n                                    </div>\r\n                                </div>\r\n                            </button>\r\n                        )\r\n                    }\r\n                    this.handleData(currentRows);\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.shouldRedirect) {\r\n            return <Redirect push to={{\r\n                pathname: ROUTES.hrReport,\r\n                state: { \r\n                    name: this.state.selectedName,\r\n                    status: this.state.selectedStatus,\r\n                    date: this.state.selectedDate,\r\n                    type: this.state.selectedType,\r\n                    description: this.state.selectedDesc,\r\n                    key: this.state.selectedKey\r\n                }\r\n            }} />\r\n        }\r\n        return (\r\n            <div id=\"table1\">\r\n                {this.state.rows}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './Dashboard.scss'\r\nimport tableau from \"tableau-api\";\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.initViz()\r\n    }\r\n\r\n    initViz() {\r\n        const vizUrl = \"https://public.tableau.com/views/capstone_15588227393440/workSafeDashboard?:embed=y&:display_count=yes&:origin=viz_share_link\"\r\n        const vizContainer = this.vizContainer;  \r\n        let viz = new window.tableau.Viz(vizContainer, vizUrl)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mainDashboard\" ref={(div) => { this.vizContainer = div }}>  \r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './Header/header.js';\r\nimport HRPageResolved from './HRPageResolved/hrpageresolved.js';\r\nimport {ROUTES} from '../constants';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport HRPage from './HRPage/HRPage.js';\r\nimport Dashboard from './Dashboard/Dashboard.js';\r\nimport Report from \"./Report/report.js\"\r\n\r\nclass HRApp extends Component {\r\n  render() {\r\n    if (!this.props.auth.isAuthenticated()) {\r\n      this.props.auth.setEmployeeType('employee');\r\n      this.props.auth.login();\r\n    }\r\n    if (!this.props.auth.getIsHr()) {\r\n      return (\r\n          <div>\r\n              <p>You are not authorized to use this application</p>\r\n          </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"body\">\r\n            <div>\r\n              <Header auth={this.props.auth}></Header>\r\n            </div>\r\n            <div className=\"main\">\r\n              <Route path={ROUTES.hrPage} component={HRPage}/>\r\n              <Route path={ROUTES.dashboard} component={Dashboard}/>\r\n              <Route path={ROUTES.hrResolved} component={HRPageResolved}/>\r\n              <Route path={ROUTES.hrReport} component={Report}/>\r\n              <Redirect to={ROUTES.hrPage}></Redirect>\r\n            </div>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HRApp;\r\n","import React, { Component } from 'react';\r\nimport loading from './loading.svg';\r\n\r\nclass Callback extends Component {\r\n  render() {\r\n    const style = {\r\n      position: 'absolute',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      height: '100vh',\r\n      width: '100vw',\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundColor: 'white',\r\n    }\r\n\r\n    return (\r\n      <div style={style}>\r\n        <p>Callback</p>\r\n        <img src={loading} alt=\"loading\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Callback;\r\n","import { ROUTES } from '../constants';\r\n\r\nexport const AUTH_CONFIG = {\r\n  domain: 'koolkids.auth0.com',\r\n  clientId: 'JfaD0c44H9h62aDA1JxjtKOa9G5E7QCx',\r\n  callbackUrl: ROUTES.url + '#/callback',\r\n  tokenUrl: 'https://koolkids.auth0.com/oauth/token'\r\n}\r\n","import auth0 from 'auth0-js';\r\nimport { AUTH_CONFIG } from './auth0-variables';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ROUTES } from '../constants'; \r\n\r\nexport default class Auth {\r\n  accessToken;\r\n  idToken;\r\n  expiresAt;\r\n  userId;\r\n  user = new BehaviorSubject();\r\n  empType;\r\n  auth0Manage;\r\n  isHr;\r\n\r\n  auth0 = new auth0.WebAuth({\r\n    domain: AUTH_CONFIG.domain,\r\n    clientID: AUTH_CONFIG.clientId,\r\n    redirectUri: AUTH_CONFIG.callbackUrl,\r\n    responseType: 'token id_token',\r\n    scope: 'openid openid profile read:current_user update:current_user update:users ' +\r\n        'create:current_user_metadata update:current_user_metadata create:users_app_metadata ' +\r\n        'update:users_app_metadata'\r\n  });\r\n\r\n  constructor() {\r\n    let localHr = localStorage.getItem('isHr');\r\n    this.isHr = localHr && localHr === 'true' ? true : false; \r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.handleAuthentication = this.handleAuthentication.bind(this);\r\n    this.isAuthenticated = this.isAuthenticated.bind(this);\r\n    this.getAccessToken = this.getAccessToken.bind(this);\r\n    this.getIdToken = this.getIdToken.bind(this);\r\n    this.renewSession = this.renewSession.bind(this);\r\n    this.updateMetadata = this.updateMetadata.bind(this);\r\n    this.getIsHr = this.getIsHr.bind(this);\r\n    this.empType = localStorage.getItem(\"empType\");\r\n  }\r\n\r\n  setEmployeeType(type) {\r\n    localStorage.setItem(\"empType\", type);\r\n    this.empType = type;\r\n  }\r\n\r\n  login() {\r\n    this.auth0.authorize({audience: \"https://koolkids.auth0.com/api/v2/\"});\r\n  }\r\n\r\n  handleAuthentication() {\r\n    this.auth0.parseHash({hash: window.location.hash.split(\"callback\")[1]}, (err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        this.setSession(authResult);\r\n      } else if (err) {      \r\n        window.location.href = ROUTES.url + '#/';\r\n        console.error(err);\r\n        alert(`Error: ${err.error}. Check the console for further details.`);\r\n      }\r\n    });\r\n  }\r\n\r\n  getAccessToken() {\r\n    return this.accessToken;\r\n  }\r\n\r\n  getIdToken() {\r\n    return this.idToken;\r\n  }\r\n\r\n  getIsHr() {\r\n    if (localStorage.getItem('isHr') === 'true') {\r\n      return true;\r\n    }\r\n    return this.isHr;\r\n  }\r\n\r\n  setSession(authResult) {\r\n    // Set isLoggedIn flag in localStorage\r\n    localStorage.setItem('isLoggedIn', 'true');\r\n\r\n    // Set the time that the access token will expire at\r\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\r\n    this.accessToken = authResult.accessToken;\r\n    this.idToken = authResult.idToken;\r\n    this.expiresAt = expiresAt;\r\n\r\n    if (this.accessToken) {\r\n      this.getManagement();\r\n      this.auth0.client.userInfo(this.accessToken, (err, user) => {\r\n        if (err) {\r\n          console.error(err)\r\n        } else {\r\n          this.userId = user.sub;\r\n          this.auth0Manage.getUser(this.userId, (err, fullUser) => {\r\n            if (err) {\r\n              console.error(err);\r\n            } else {\r\n              this.user.next(fullUser);\r\n              this.checkFirstLogin(fullUser);\r\n            }\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  renewSession() {\r\n    this.auth0.checkSession({}, (err, authResult) => {\r\n       if (authResult && authResult.accessToken && authResult.idToken) {\r\n         this.setSession(authResult);\r\n       } else if (err) {\r\n         this.logout();\r\n         console.error(err);\r\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\r\n       }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    // Remove tokens and expiry time\r\n    this.accessToken = null;\r\n    this.idToken = null;\r\n    this.expiresAt = 0;\r\n\r\n    // Remove isLoggedIn flag from localStorage\r\n    localStorage.removeItem('isLoggedIn');\r\n\r\n    this.auth0.logout({\r\n      return_to: window.location.origin\r\n    });\r\n\r\n    // navigate to the home route\r\n    window.location.href = ROUTES.url;\r\n  }\r\n\r\n  isAuthenticated() {\r\n    // Check whether the current time is past the\r\n    // access token's expiry time\r\n    let expiresAt = this.expiresAt;\r\n    return new Date().getTime() < expiresAt;\r\n  }\r\n\r\n  checkFirstLogin(user) {\r\n    if (user.user_metadata) {\r\n      if (user.user_metadata.isHr) {\r\n        localStorage.setItem('isHr', 'true')\r\n        this.isHr = user.user_metadata.isHr;\r\n      }\r\n      window.location.href = ROUTES.url + '#/' + this.empType;\r\n    } else {\r\n      window.location.href = ROUTES.url + '#' + ROUTES.register;\r\n    }\r\n  }\r\n\r\n  updateMetadata(metadata) {\r\n    this.auth0Manage.patchUserMetadata(this.userId, metadata, (err, res) => {\r\n      if (err) {\r\n        console.error(err);\r\n      } else {\r\n        this.user.next(res);\r\n        this.isHr = metadata.isHr;\r\n        if (this.isHr) {\r\n          localStorage.setItem('isHr', 'true')\r\n        } else {\r\n          localStorage.setItem('isHr', 'false')\r\n        }\r\n        window.location.href = ROUTES.url + '#/' + this.empType;\r\n      }\r\n    });\r\n  }\r\n\r\n  getManagement() {\r\n    this.auth0Manage = new auth0.Management({\r\n      domain: AUTH_CONFIG.domain,\r\n      token: this.accessToken\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport Register from './Register/Register';\r\nimport EmpApp from './EmployeeView/App';\r\nimport HRApp from './HRView/App';\r\nimport {ROUTES} from './constants';\r\nimport Callback from './Callback/Callback';\r\nimport Auth from './Auth0/Auth';\r\nimport './App.scss';\r\n\r\nconst handleAuthentication = ({location}, auth) => {\r\n    if (/access_token|id_token|error/.test(location.hash)) {\r\n        auth.handleAuthentication();\r\n    }\r\n}\r\n\r\nexport default class App extends Component {\r\n    auth;\r\n\r\n    constructor() {\r\n        super();\r\n        this.auth = new Auth();\r\n    }\r\n    componentDidMount() {\r\n        let splitUrl = window.location.href.split(\"#\");\r\n        if (splitUrl[1].includes('/access_token')) {\r\n            window.location.href = splitUrl[0] + '#/callback#' + splitUrl[1];\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Route path={ROUTES.register} render={(props) => <Register auth={this.auth} {...props} />}/>\r\n                    <Route path={ROUTES.employee} render={(props) => <EmpApp auth={this.auth} {...props} />}/>\r\n                    <Route path={ROUTES.hr} render={(props) => <HRApp auth={this.auth} {...props} />}/>\r\n                    <Route path={ROUTES.callback} render={(props) => {\r\n                        handleAuthentication(props, this.auth);\r\n                        return <Callback {...props} />\r\n                    }}/>\r\n                    <Route exact path={ROUTES.login} render={() => {\r\n                        return (\r\n                            <div style={loginStyle}>\r\n                                <div>\r\n                                    <h4>Login as:</h4>\r\n                                    <button className=\"btn btn-outline-primary empSelect mr-2\" onClick={() => {\r\n                                        this.auth.setEmployeeType(\"employee\");\r\n                                        this.auth.login();\r\n                                    }}>Employee</button>\r\n                                    <button className=\"btn btn-outline-primary empSelect\" onClick={() => {\r\n                                        this.auth.setEmployeeType(\"hr\");\r\n                                        this.auth.login();\r\n                                    }}>HR</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }}/>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nconst loginStyle = {\r\n    height: \"66vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/anothaone.4861f4d3.png\";","module.exports = __webpack_public_path__ + \"static/media/anothaone.4861f4d3.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";"],"sourceRoot":""}