{"version":3,"sources":["Register/Register.js","constants.js","EmployeeView/Header/Header.js","Firebase/firebase.js","Firebase/firebaseService.js","EmployeeView/Report/Report.js","EmployeeView/Profile/Card/Card.js","EmployeeView/Profile/Profile.js","EmployeeView/App.js","HRView/Header/header.js","HRView/Report/report.js","HRView/HRPageResolved/hrpageresolved.js","HRView/HRPage/HRPage.js","HRView/Dashboard/Dashboard.js","HRView/App.js","Callback/Callback.js","Auth0/auth0-variables.js","Auth0/Auth.js","App.js","serviceWorker.js","index.js","EmployeeView/Header/anothaone.png","HRView/Header/anothaone.png","Callback/loading.svg"],"names":["Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","meta","name","user_id","isHr","props","auth","updateMetadata","alert","key","value","_this2","react_default","a","createElement","className","htmlFor","id","placeholder","onChange","evt","handleChange","currentTarget","type","checked","onClick","updateUser","React","Component","ROUTES","login","callback","register","employee","landing","profile","empReport","hr","hrPage","dashboard","hrReport","hrResolved","url","Header","src","logo","alt","NavLink","to","activeClassName","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","FirebaseService","db","firestore","collection","data","add","where","get","then","snapshot","forEach","snap","push","defineProperty","status","newstatus","doc","update","console","log","Report","checkDate","curr","moment","Date","state","userType","toDashboard","reportInfo","datetime","location","harasser","description","user","undefined","subscribe","user_metadata","_this3","format","setState","_this4","Redirect","DateTime_default","utc","isValidDate","aria-describedby","selected","disabled","hidden","field","rows","fileReport","Card","desc","time","Profile","fetchData","map","row","content","keys","Profile_Card_Card","EmpApp","isAuthenticated","setEmployeeType","EmployeeView_Header_Header","Route","path","render","EmployeeView_Report_Report","assign","EmployeeView_Profile_Profile","HashRouter","exact","report_SingleReport","SingleReport","report_Form","Form","firstval","val","bind","assertThisInitialized","handleSubmit","e","target","event","preventDefault","updateStatus","onSubmit","date","HRPage","Switch","component","hrpageresolved_ResolvedTable","ResolvedTable","shouldRedirect","createRows","selectedStatus","selectedDate","selectedName","selectedType","selectedDesc","selectedKey","currentRows","getByStatus","_loop","currKey","i","document","rowid","currStatus","currName","currDate","currType","currDescription","handleClick","replace","handleData","pathname","HRPage_ReportTable","ReportTable","statuses","j","Dashboard","initViz","vizContainer","window","tableau","Viz","ref","div","HRApp","getIsHr","header_Header","HRPageResolved","Callback","style","position","display","justifyContent","height","width","top","bottom","left","right","backgroundColor","loading","AUTH_CONFIG","domain","clientId","callbackUrl","tokenUrl","Auth","BehaviorSubject","auth0","WebAuth","clientID","redirectUri","responseType","scope","localHr","localStorage","getItem","logout","handleAuthentication","getAccessToken","getIdToken","renewSession","empType","setItem","authorize","audience","parseHash","hash","split","err","authResult","accessToken","idToken","setSession","href","error","concat","expiresAt","expiresIn","getTime","getManagement","client","userInfo","userId","sub","auth0Manage","getUser","fullUser","next","checkFirstLogin","checkSession","error_description","removeItem","return_to","origin","metadata","patchUserMetadata","res","Management","token","App","splitUrl","includes","src_Register_Register","EmployeeView_App","src_HRView_App","_ref","test","src_Callback_Callback","loginStyle","alignItems","Boolean","hostname","match","ReactDOM","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.61bbe9b3.chunk.js","sourcesContent":["import React from 'react';\nimport './Register.scss'\n\nclass Register extends React.Component {\n    constructor() {\n        super();\n        this.meta = {\n            name: '',\n            user_id: '',\n            isHr: false\n        }\n    }\n    updateUser() {\n        if (!this.meta.name) {\n            alert(\"Please enter a valid name\");\n        } else {\n            if (!this.meta.user_id) {\n                delete this.meta.user_id;\n            }\n            this.props.auth.updateMetadata(this.meta);\n        }\n    }\n    handleChange(key, value) {\n        this.meta[key] =  value;\n    }\n    render() {\n        return (\n            <div className=\"backdrop bg-dark\">\n                <div className=\"register card\">\n                    <p className=\"register-info\">First, we just need to collect some information from you.</p>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"nameInput\">Name</label>\n                        <input className=\"form-control\" id=\"nameInput\" placeholder=\"First Last\" \n                                onChange={evt => this.handleChange(\"name\", evt.currentTarget.value)}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"idInput\">Employee ID</label>\n                        <input className=\"form-control\" id=\"idInput\" placeholder=\"If applicable\"\n                                onChange={evt => this.handleChange(\"user_id\", evt.currentTarget.value)}/>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"hrCheck\" value=\"isHr\"\n                                onChange={evt => this.handleChange(\"isHr\", evt.currentTarget.checked)}/>\n                        <label className=\"form-check-label\" htmlFor=\"hrCheck\">HR Employee</label>\n                    </div>\n                    <div className=\"btn-div\">\n                        <button className=\"btn btn-primary\" onClick={() => this.updateUser()}>Register</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Register;","export const ROUTES = {\n    login: \"/\",\n    callback: \"/callback\",\n    register: \"/register\",\n    employee: \"/employee\",\n    landing: \"/employee/about\",\n    profile: \"/employee/profile\",\n    empReport: \"/employee/report\",\n    hr: \"/hr\",\n    hrPage: \"/hr/hrpage\",\n    dashboard: \"/hr/dashboard\",\n    hrReport: \"/hr/report-page\",\n    hrResolved: \"/hr/resolved\",\n    url: process.env.NODE_ENV === 'development' ? 'http://localhost:3000/' : 'https://lukepallen.github.io/workSafe/'\n}","import React from 'react';\nimport './Header.scss';\nimport {NavLink} from 'react-router-dom';\nimport {ROUTES} from \"../../constants\";\nimport logo from './anothaone.png'\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <div className=\"title\">\n                    <img src={logo} alt=\"Logo\"/>\n                </div>\n                <div className=\"navbar\">\n                    <NavLink to={ROUTES.empReport} activeClassName=\"selected\" className=\"link\">Report</NavLink>\n                    <NavLink to={ROUTES.profile} activeClassName=\"selected\" className=\"link\">Profile</NavLink>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import firebase from 'firebase';\n\nvar config = {\n    apiKey: \"AIzaSyDNjt0ZQR50uFWwvHiLMs3dR3OckvzteLo\",\n    authDomain: \"worksafe-630dd.firebaseapp.com\",\n    databaseURL: \"https://worksafe-630dd.firebaseio.com\",\n    projectId: \"worksafe-630dd\",\n    storageBucket: \"worksafe-630dd.appspot.com\",\n    messagingSenderId: \"866713004286\"\n  };\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nexport default firebase;","import firebase from './firebase';\n\nexport default class FirebaseService {\n    constructor() {\n        this.db = firebase.firestore().collection(\"reports\");\n    }\n\n    add(data) {\n        return this.db.add(data);\n    }\n\n    get(name) {\n        let data = []\n        return this.db.where(\"name\", \"==\", name).get().then(\n            snapshot => {\n                snapshot.forEach(snap => data.push({[snap.id]: snap.data()}));\n                return data;\n            }\n        );\n    }\n\n    getAll() {\n        let data = []\n        return this.db.get().then(\n            snapshot => {\n                snapshot.forEach(snap => data.push({[snap.id]: snap.data()}));\n                return data;\n            }\n        );\n    }\n\n    \n    getByStatus(status) {\n        let data = []\n        return this.db.where(\"status\", \"==\", status).get().then(\n            snapshot => {\n                snapshot.forEach(snap => data.push({[snap.id]: snap.data()}));\n                return data;\n            }\n        );\n    }\n\n    updateStatus(key, newstatus) {\n        return this.db.doc(key).update({\n            status : newstatus\n        }).then(function(){\n            console.log(\"Updated to\" + newstatus)\n        })\n    }\n}","import React from 'react';\nimport DateTime from 'react-datetime';\nimport FirebaseService from '../../Firebase/firebaseService';\nimport {Redirect} from 'react-router-dom';\nimport {ROUTES} from '../../constants';\nimport moment  from 'moment';\nimport './Report.scss';\nimport '../DateTime.scss';\n\n\nclass Report extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            userType: '',\n            toDashboard: false\n        }\n        this.reportInfo = {\n            name: '',\n            datetime: '',\n            location: '',\n            type: '',\n            harasser: '',\n            description: '',\n            status: \"Awaiting Review\",\n        }\n        this.firebase = new FirebaseService();\n        this.user = undefined;\n    }\n    componentDidMount() {\n        this.props.auth.user.subscribe(user => {\n            this.user = user;\n            this.reportInfo.name = this.user.user_metadata.name;\n        })\n    }\n    handleChange(key, value) {\n        this.reportInfo[key] =  value;\n    }\n    checkDate = (curr) => curr - moment(new Date()) <= 0;\n    fileReport() {\n        this.reportInfo[\"timeFiled\"] = moment().format();\n        this.firebase.add(this.reportInfo).then(\n            () => this.setState({toDashboard: true})\n        )\n    }\n    render() {\n        if (this.state.toDashboard === true) {\n            return <Redirect to={ROUTES.profile}/>\n        }\n        return (\n            <div className=\"report\">\n                {!this.state.userType ? \n                <div className=\"select\">\n                    <div className=\"select-btns\">\n                        <button className=\"btn btn1\" onClick={() => this.setState({\"userType\": \"bystander\"})}>Bystander</button>\n                        <button className=\"btn btn1\" onClick={() => this.setState({\"userType\": \"firstHand\"})}>First Hand</button>\n                    </div>\n                </div> \n                : \n                <div className=\"buffer\">\n                    <div className=\"empForm\">\n                        <div className=\"name formSection\">\n                            <p className=\"label\">Name</p>\n                            <p>{this.reportInfo.name}</p>\n                        </div>\n                        <div className=\"dateTime formSection short\">\n                            <div className=\"date\">\n                                <p className=\"label\">Date and Approximate Time of Occurence</p>\n                                <DateTime onChange={value => this.handleChange(\"datetime\", moment.utc(value).format())} isValidDate={this.checkDate} />\n                            </div>\n                        </div>\n                        <div className=\"location formSection short\">\n                            <p className=\"label\">Location</p>\n                            <input type=\"text\" className=\"form-control form-control-sm\" aria-describedby=\"locationInput\"\n                                    onChange={evt => this.handleChange(\"location\", evt.currentTarget.value)}></input>\n                        </div>\n                        <div className=\"type formSection short\">\n                            <p className=\"label\">Type of Harassment</p>\n                            <select type=\"text\" className=\"form-control form-control-sm\"\n                                    onChange={evt => this.handleChange(\"type\", evt.currentTarget.value)}>\n                                <option value=\"\" selected disabled hidden>Select Harassment Type</option>\n                                <option>Sexual Harassment</option>\n                                <option>Workplace Bullying</option>\n                                <option>Retaliation</option>\n                                <option>Ageism</option>\n                                <option>Racial Harassment</option>\n                                <option>Disability-Based Harassment</option>\n                            </select>\n                        </div>\n                        <div className=\"harasser formSection short\">\n                            <p className=\"label\">Harasser</p>\n                            <input type=\"text\" className=\"form-control form-control-sm\" aria-describedby=\"harasserInput\"\n                                    onChange={evt => this.handleChange(\"harasser\", evt.currentTarget.value)}></input>\n                        </div>\n                        <div className=\"bystander formSection short\">\n                            <p className=\"label\">{this.state.userType === 'bystander' ? \"Parties \": \"Bystanders\"} Present </p>\n                            <input type=\"text\" className=\"form-control form-control-sm\" aria-describedby=\"bystanderInput\"\n                                    onChange={evt => {\n                                        let field = this.state.userType === 'bystander' ? \"parties \": \"bystanders\"\n                                        this.handleChange(field, evt.currentTarget.value)\n                                    }}></input>\n                        </div>\n                        <div className=\"description formSection\">\n                            <p className=\"label\">Description</p>\n                            <textarea type=\"text\" className=\"form-control form-control-sm\" rows=\"2\"\n                                    onChange={evt => this.handleChange(\"description\", evt.currentTarget.value)}></textarea>\n                        </div>\n                        <div className=\"evidence formSection short\">\n                            <p className=\"label\">Additional Evidence</p>\n                            <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"></input>\n                        </div>\n                    </div>\n                    <div className=\"submit\">\n                        <button className=\"btn submitBtn\" onClick={() => this.fileReport()}>Submit</button>\n                    </div>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Report;","import React from 'react';\nimport './Card.scss'\nimport moment from 'moment';\n\nclass Card extends React.Component {\n    render() {\n        return (\n            <div className=\"card\">\n                <p className=\"label\">Status:</p>\n                <p className=\"content\">{this.props.status}</p>\n                <p className=\"label\">Description:</p>\n                <p className=\"content\">{this.props.desc}</p>\n                <p className=\"label\">Date and Time of Occurence:</p>\n                <p className=\"content\">{moment(this.props.time).format(\"LLLL\")}</p>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React from 'react';\nimport './Profile.scss'\nimport FirebaseService from '../../Firebase/firebaseService';\nimport Card from './Card/Card';\n\nclass Profile extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            rows: [],\n        };\n        this.firebase = new FirebaseService();\n        this.user = undefined;\n    }\n    componentDidMount() {\n        this.props.auth.user.subscribe(user => {\n            this.user = user;\n            this.fetchData();\n        })\n    }\n    fetchData() {\n        this.firebase.get(this.user.user_metadata.name).then(data => {\n            let rows = data.map(row => {\n                let content\n                Object.keys(row).forEach(key => content = row[key])\n                return content\n            });\n            this.setState({\"rows\": rows});\n        })\n    }\n    render() {\n        return (\n            <div className=\"profile\">\n                <div className=\"reports\">\n                    <p className=\"label\">Reports Filed</p>\n                    <div>\n                        {\n                            this.state.rows.length !== 0 ? \n                            this.state.rows.map(row => \n                                <Card desc={row.description} time={row.datetime} status={row.status}></Card>\n                            ) :\n                            <p>Go to the report tab to file a report</p>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport {HashRouter as Redirect, Route} from 'react-router-dom';\nimport {ROUTES} from '../constants';\nimport Header from './Header/Header';\nimport Report from './Report/Report';\nimport Profile from './Profile/Profile';\n\nclass EmpApp extends Component {\n    render() {\n      if (!this.props.auth.isAuthenticated()) {\n        this.props.auth.setEmployeeType('employee');\n        this.props.auth.login();\n      }\n      return (\n        <div className=\"body\">\n          <div>\n            <Header></Header>\n          </div>\n          <div className=\"main\">\n            <Route path={ROUTES.empReport} render={(props) => <Report auth={this.props.auth} {...props}/>}/>\n            <Route path={ROUTES.profile} render={(props) => <Profile auth={this.props.auth} {...props}/>}/>\n            <Redirect to={ROUTES.empReport}></Redirect>\n            \n          </div>\n        </div>\n      );\n    }\n}\n\n\nexport default EmpApp;","import React, { Component } from 'react';\nimport './header.scss'\nimport {NavLink} from 'react-router-dom';\nimport {ROUTES} from \"../../constants\";\nimport logo from './anothaone.png'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <div className=\"title\">\n                    <img src={logo} alt=\"Logo\" />\n                </div>\n                <div className=\"tabs\">\n                    <NavLink to={ROUTES.hrPage} activeClassName=\"selected\" className=\"link\">Pending Reports</NavLink>\n                    <NavLink exact={true} to={ROUTES.dashboard} activeClassName=\"selected\" className=\"link\">Dashboard</NavLink>\n                    <NavLink to={ROUTES.hrResolved} activeClassName=\"selected\" className=\"link\">Resolved Reports</NavLink>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './report.scss';\nimport FirebaseService from '../../Firebase/firebaseService';\n\nexport default class Report extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div>\n                <SingleReport data={this.props.location.state}></SingleReport>\n            </div>\n        );\n    }\n}\n\nclass SingleReport extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div>\n                <Form data={this.props.data}></Form>\n            </div>\n        );\n    }\n}\n\nclass Form extends Component {\n\n    constructor(props) {\n        super(props);\n        this.firebase = new FirebaseService();\n        this.state = {\n            firstval: this.props.data.status,\n            val : this.props.data.status\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            val: e.target.value\n        })\n    };\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.setState({\n            firstval: this.state.val\n        })\n        this.firebase.updateStatus(this.props.data.key, this.state.val);\n    }\n\n    render() {\n        return(\n            <div className=\"form\">\n                <div id=\"header\">\n                    <h3>\n                    Report Name\n                    </h3>\n                    <form onChange={this.handleChange} onSubmit={this.handleSubmit} value={this.state.val}>\n                        <select>\n                            <option value=\"Validated\">Validated</option>\n                            <option value=\"Awaiting Review\">Awaiting Review</option>\n                            <option value=\"Mediation\">Mediation</option>\n                            <option value=\"Corrective Action\">Corrective Action</option>\n                            <option value=\"Final Investigative Report Submitted\">Final Investigative Report Submitted</option>\n                            <option value=\"Resolved\">Resolved</option>\n                        </select>\n                        <input type=\"submit\" value=\"submit\" />\n                    </form>\n                </div>\n                <div className=\"responses\">\n                    <div className=\"group\">\n                        <div className=\"reponse\"> Name:\n                            <p className=\"replies\"> {this.props.data.name} </p>\n                        </div>\n                        <div className=\"reponse\"> Date:\n                            <p className=\"replies\"> {this.props.data.date} </p>\n                        </div>\n                    </div>\n                    <div className=\"group\">\n                        <div className=\"reponse\"> Type: \n                            <p className=\"replies\"> {this.props.data.type} </p>\n                        </div>\n                        <div className=\"reponse\"> Description:\n                            <p className=\"replies\"> {this.props.data.description} </p>\n                        </div>\n                    </div>\n                    <div className=\"group\">\n                        <div className=\"reponse\"> Your Response:\n                            <p className=\"replies\"> {this.state.firstval} </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './hrpageresolved.scss';\nimport Report from '../Report/report.js';\nimport {ROUTES} from '../../constants';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport FirebaseService from '../../Firebase/firebaseService';\n\nexport default class HRPage extends Component {\n    render() {\n        return (\n            <div>\n                <Switch>\n                    <Route path={ROUTES.hrReport} component={Report}></Route>\n                </Switch>\n                <ResolvedTable></ResolvedTable>\n            </div>\n        )\n    }\n}\n\n\nclass ResolvedTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            shouldRedirect: false,\n            rows: []\n        };\n        this.firebase = new FirebaseService();\n    }\n\n    componentDidMount() {\n        this.createRows();\n    }\n\n    handleClick(status, name, datetime, type, description, key) {\n        this.setState({\n            shouldRedirect: true,\n            selectedStatus: status,\n            selectedDate: datetime,\n            selectedName: name,\n            selectedType: type,\n            selectedDesc: description,\n            selectedKey: key\n        });\n    };\n\n    handleData(currentRows) {\n        this.setState({rows: currentRows});\n    }\n\n    createRows() {\n        let currentRows = []\n        this.firebase.getByStatus(\"Resolved\").then(\n            snap => {\n                for (var i in snap) {\n                    let currKey = \"\";\n                    currKey = (Object.keys(snap[i]))[0];\n                    let document = snap[i][currKey]\n                    var rowid = \"t2row\" + i;\n                    let currStatus = document.status;\n                    let currName = document.name;\n                    let currDate = document.datetime;\n                    let currType = document.type;\n                    let currDescription = document.description;\n                    currentRows.push(\n                        <button key={rowid} onClick={() => this.handleClick(currStatus, currName, currDate, currType, currDescription, currKey)}>\n                            <div className=\"rows\">\n                                <div className=\"content\">\n                                    <div className=\"head\">\n                                        <h2> {currName} </h2>\n                                        <p className={currStatus.replace(/\\s+/g, '')}> {currStatus} </p>\n                                    </div>\n                                        <p className=\"date\"> {currDate} </p>\n                                        <p className=\"type\"> {currType} </p>\n                                </div>\n                            </div>\n                        </button>\n                    )\n                }\n                this.handleData(currentRows);\n            }\n        )\n    }\n\n    render() {\n        if (this.state.shouldRedirect) {\n            return <Redirect push to={{\n                pathname: ROUTES.hrReport,\n                state: { \n                    name: this.state.selectedName,\n                    status: this.state.selectedStatus,\n                    date: this.state.selectedDate,\n                    type: this.state.selectedType,\n                    description: this.state.selectedDesc,\n                    key: this.state.selectedKey\n                }\n            }} />\n        }\n        return (\n            <div id=\"table2\">\n                {this.state.rows}\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './HRPage.scss';\nimport Report from '../Report/report.js';\nimport {ROUTES} from '../../constants';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport FirebaseService from '../../Firebase/firebaseService';\n\nexport default class HRPage extends Component {\n    render() {\n        return (\n            <div>\n                <Switch>\n                    <Route path={ROUTES.hrReport} component={Report}></Route>\n                </Switch>\n                <ReportTable></ReportTable>\n            </div>\n        )\n    }\n}\n\nclass ReportTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            shouldRedirect: false,\n            rows: [],\n            selectedName: \"\",\n            selectedDate: null,\n            selectedStatus: \"\",\n            selectedType: \"\"\n        };\n        this.firebase = new FirebaseService();\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(status, name, datetime, type, description, key) {\n        this.setState({\n            shouldRedirect: true,\n            selectedStatus: status,\n            selectedDate: datetime,\n            selectedName: name,\n            selectedType: type,\n            selectedDesc: description,\n            selectedKey: key\n        });\n    };\n\n    componentDidMount() {\n        this.createRows();\n    }\n\n    handleData(currentRows) {\n        this.setState({rows: currentRows});\n    }\n\n    createRows() {\n        let currentRows = []\n        let statuses = [\"Awaiting Review\", \"Validated\", \"Mediation\", \"Corrective Action\", \"Final Investigative Report Submitted\"];\n        for (var j = 0; j < statuses.length; j++) {\n            this.firebase.getByStatus(statuses[j]).then(\n                snap => {\n\n                    for (var i in snap) {\n                        let currKey = \"\";\n                        currKey = (Object.keys(snap[i]))[0];\n                        let document = snap[i][currKey]\n                        var rowid = \"t1row\" + document.datetime + i;\n                        let currStatus = document.status;\n                        let currName = document.name;\n                        let currDate = document.datetime;\n                        let currType = document.type;\n                        let currDescription = document.description;\n                        currentRows.push(\n                            <button key={rowid} onClick={() => this.handleClick(currStatus, currName, currDate, currType, currDescription, currKey)}>\n                                <div className=\"rows\">\n                                    <div className=\"content\">\n                                        <div className=\"head\">\n                                            <h2> {currName} </h2>\n                                            <p className={currStatus.replace(/\\s+/g, '')}> {currStatus} </p>\n                                        </div>\n                                        <p className=\"date\"> {currDate} </p>\n                                        <p className=\"type\"> {currType} </p>\n                                    </div>\n                                </div>\n                            </button>\n                        )\n                    }\n                    this.handleData(currentRows);\n                }\n            )\n        }\n    }\n\n    render() {\n        if (this.state.shouldRedirect) {\n            return <Redirect push to={{\n                pathname: ROUTES.hrReport,\n                state: { \n                    name: this.state.selectedName,\n                    status: this.state.selectedStatus,\n                    date: this.state.selectedDate,\n                    type: this.state.selectedType,\n                    description: this.state.selectedDesc,\n                    key: this.state.selectedKey\n                }\n            }} />\n        }\n        return (\n            <div id=\"table1\">\n                {this.state.rows}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Dashboard.scss'\nimport tableau from \"tableau-api\";\n\nclass Dashboard extends React.Component {\n\n    componentDidMount() {\n        this.initViz()\n    }\n\n    initViz() {\n        const vizUrl = \"https://public.tableau.com/views/workSafe/workSafeDashboard?:embed=y&:display_count=yes&:origin=viz_share_link\"\n        const vizContainer = this.vizContainer;  \n        let viz = new window.tableau.Viz(vizContainer, vizUrl)\n\n    }\n\n    render() {\n        return (\n            <div ref={(div) => { this.vizContainer = div }}>  \n            </div> \n        )\n    }\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header/header.js';\nimport HRPageResolved from './HRPageResolved/hrpageresolved.js';\nimport {ROUTES} from '../constants';\nimport { Route, Redirect } from 'react-router-dom';\nimport HRPage from './HRPage/HRPage.js';\nimport Dashboard from './Dashboard/Dashboard.js';\nimport Report from \"./Report/report.js\"\n\nclass HRApp extends Component {\n  render() {\n    if (!this.props.auth.isAuthenticated()) {\n      this.props.auth.setEmployeeType('employee');\n      this.props.auth.login();\n    }\n    if (!this.props.auth.getIsHr()) {\n      return (\n          <div>\n              <p>You are not authorized to use this application</p>\n          </div>\n      )\n    }\n    return (\n      <div className=\"body\">\n            <div>\n              <Header></Header>\n            </div>\n            <div className=\"main\">\n              <Route path={ROUTES.hrPage} component={HRPage}/>\n              <Route path={ROUTES.dashboard} component={Dashboard}/>\n              <Route path={ROUTES.hrResolved} component={HRPageResolved}/>\n              <Route path={ROUTES.hrReport} component={Report}/>\n              <Redirect to={ROUTES.hrPage}></Redirect>\n            </div>\n          </div>\n    );\n  }\n}\n\nexport default HRApp;\n","import React, { Component } from 'react';\nimport loading from './loading.svg';\n\nclass Callback extends Component {\n  render() {\n    const style = {\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      height: '100vh',\n      width: '100vw',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div style={style}>\n        <p>Callback</p>\n        <img src={loading} alt=\"loading\"/>\n      </div>\n    );\n  }\n}\n\nexport default Callback;\n","import { ROUTES } from '../constants';\n\nexport const AUTH_CONFIG = {\n  domain: 'koolkids.auth0.com',\n  clientId: 'JfaD0c44H9h62aDA1JxjtKOa9G5E7QCx',\n  callbackUrl: ROUTES.url + '#/callback',\n  tokenUrl: 'https://koolkids.auth0.com/oauth/token'\n}\n","import auth0 from 'auth0-js';\nimport { AUTH_CONFIG } from './auth0-variables';\nimport { BehaviorSubject } from 'rxjs';\nimport { ROUTES } from '../constants'; \n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n  userId;\n  user = new BehaviorSubject();\n  empType;\n  auth0Manage;\n  isHr;\n\n  auth0 = new auth0.WebAuth({\n    domain: AUTH_CONFIG.domain,\n    clientID: AUTH_CONFIG.clientId,\n    redirectUri: AUTH_CONFIG.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid openid profile read:current_user update:current_user update:users ' +\n        'create:current_user_metadata update:current_user_metadata create:users_app_metadata ' +\n        'update:users_app_metadata'\n  });\n\n  constructor() {\n    let localHr = localStorage.getItem('isHr');\n    this.isHr = localHr && localHr === 'true' ? true : false; \n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n    this.updateMetadata = this.updateMetadata.bind(this);\n    this.getIsHr = this.getIsHr.bind(this);\n    this.empType = localStorage.getItem(\"empType\");\n  }\n\n  setEmployeeType(type) {\n    localStorage.setItem(\"empType\", type);\n    this.empType = type;\n  }\n\n  login() {\n    this.auth0.authorize({audience: \"https://koolkids.auth0.com/api/v2/\"});\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash({hash: window.location.hash.split(\"callback\")[1]}, (err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n      } else if (err) {      \n        window.location.href = ROUTES.url + '#/';\n        console.error(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  getIsHr() {\n    if (localStorage.getItem('isHr') === 'true') {\n      return true;\n    }\n    return this.isHr;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    if (this.accessToken) {\n      this.getManagement();\n      this.auth0.client.userInfo(this.accessToken, (err, user) => {\n        if (err) {\n          console.error(err)\n        } else {\n          this.userId = user.sub;\n          this.auth0Manage.getUser(this.userId, (err, fullUser) => {\n            if (err) {\n              console.error(err);\n            } else {\n              this.user.next(fullUser);\n              this.checkFirstLogin(fullUser);\n            }\n          });\n        }\n      })\n    }\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.error(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    window.location.href = ROUTES.url;\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n\n  checkFirstLogin(user) {\n    if (user.user_metadata) {\n      if (user.user_metadata.isHr) {\n        localStorage.setItem('isHr', 'true')\n        this.isHr = user.user_metadata.isHr;\n      }\n      window.location.href = ROUTES.url + '#/' + this.empType;\n    } else {\n      window.location.href = ROUTES.url + '#' + ROUTES.register;\n    }\n  }\n\n  updateMetadata(metadata) {\n    this.auth0Manage.patchUserMetadata(this.userId, metadata, (err, res) => {\n      if (err) {\n        console.error(err);\n      } else {\n        this.user.next(res);\n        this.isHr = metadata.isHr;\n        if (this.isHr) {\n          localStorage.setItem('isHr', 'true')\n        } else {\n          localStorage.setItem('isHr', 'false')\n        }\n        window.location.href = ROUTES.url + '#/' + this.empType;\n      }\n    });\n  }\n\n  getManagement() {\n    this.auth0Manage = new auth0.Management({\n      domain: AUTH_CONFIG.domain,\n      token: this.accessToken\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport Register from './Register/Register';\nimport EmpApp from './EmployeeView/App';\nimport HRApp from './HRView/App';\nimport {ROUTES} from './constants';\nimport Callback from './Callback/Callback';\nimport Auth from './Auth0/Auth';\nimport './App.scss';\n\nconst handleAuthentication = ({location}, auth) => {\n    if (/access_token|id_token|error/.test(location.hash)) {\n        auth.handleAuthentication();\n    }\n}\n\nexport default class App extends Component {\n    auth;\n\n    constructor() {\n        super();\n        this.auth = new Auth();\n    }\n    componentDidMount() {\n        let splitUrl = window.location.href.split(\"#\");\n        if (splitUrl[1].includes('/access_token')) {\n            window.location.href = splitUrl[0] + '#/callback#' + splitUrl[1];\n        }\n    }\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Route path={ROUTES.register} render={(props) => <Register auth={this.auth} {...props} />}/>\n                    <Route path={ROUTES.employee} render={(props) => <EmpApp auth={this.auth} {...props} />}/>\n                    <Route path={ROUTES.hr} render={(props) => <HRApp auth={this.auth} {...props} />}/>\n                    <Route path={ROUTES.callback} render={(props) => {\n                        handleAuthentication(props, this.auth);\n                        return <Callback {...props} />\n                    }}/>\n                    <Route exact path={ROUTES.login} render={() => {\n                        return (\n                            <div style={loginStyle}>\n                                <div>\n                                    <h4>Login as:</h4>\n                                    <button className=\"btn btn-outline-primary empSelect mr-2\" onClick={() => {\n                                        this.auth.setEmployeeType(\"employee\");\n                                        this.auth.login();\n                                    }}>Employee</button>\n                                    <button className=\"btn btn-outline-primary empSelect\" onClick={() => {\n                                        this.auth.setEmployeeType(\"hr\");\n                                        this.auth.login();\n                                    }}>HR</button>\n                                </div>\n                            </div>\n                        )\n                    }}/>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst loginStyle = {\n    height: \"66vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/anothaone.4861f4d3.png\";","module.exports = __webpack_public_path__ + \"static/media/anothaone.4861f4d3.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";"],"sourceRoot":""}