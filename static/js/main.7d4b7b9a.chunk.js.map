{"version":3,"sources":["constants.js","EmployeeView/Header/Header.js","Firebase/firebase.js","Firebase/firebaseService.js","EmployeeView/Report/Report.js","EmployeeView/Dashboard/Dashboard.js","EmployeeView/Profile/Card/Card.js","EmployeeView/Profile/Profile.js","EmployeeView/App.js","HRView/Header/header.js","HRView/Report/report.js","HRView/HRPage/HRPage.js","HRView/App.js","App.js","serviceWorker.js","index.js","HRView/images/reports.png","HRView/images/validated.png"],"names":["ROUTES","Header","react_default","a","createElement","className","NavLink","to","activeClassName","exact","React","Component","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","FirebaseService","Object","classCallCheck","this","db","firestore","collection","data","add","name","where","get","then","snapshot","forEach","snap","push","defineProperty","id","status","Report","_this","possibleConstructorReturn","getPrototypeOf","call","checkDate","curr","moment","Date","state","userType","toDashboard","reportInfo","datetime","location","type","description","key","value","_this2","format","setState","_this3","Redirect","DateTime_default","onChange","handleChange","utc","isValidDate","aria-describedby","evt","currentTarget","selected","disabled","hidden","field","rows","onClick","fileReport","Dashboard","Card","props","desc","Profile","fetchData","console","log","map","row","content","keys","Profile_Card_Card","time","EmpApp","EmployeeView_Header_Header","Route","path","component","HashRouter","showTable","src","reports","alt","hideTable","validated","document","getElementById","style","display","header_Header","report_SingleReport","SingleReport","report_Form","Form","HRPage","Switch","HRPage_ReportTable","HRPage_ResolvedTable","ReportTable","shouldRedirect","createRows","currentRows","statuses","j","getByStatus","i","rowid","handleClick","replace","handleData","ResolvedTable","_this4","HRApp","HRPage_HRPage_HRPage","App","BrowserRouter","Boolean","window","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7d4b7b9a.chunk.js","sourcesContent":["export const ROUTES = {\r\n    employee: \"/employee\",\r\n    landing: \"/employee/about\",\r\n    dashboard: \"/employee/dashboard\",\r\n    profile: \"/employee/profile\",\r\n    empReport: \"/employee/report\",\r\n    hr: \"/hr\",\r\n    hrReport: \"hr/report-page\"\r\n}","import React from 'react';\r\nimport './Header.scss';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {ROUTES} from \"../../constants\";\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-title\">\r\n                    <h3>workSafe</h3>\r\n                </div>\r\n                <div className=\"navbar\">\r\n                    <NavLink to={ROUTES.empReport} activeClassName=\"selected\" className=\"link\">Report</NavLink>\r\n                    <NavLink exact={true} to={ROUTES.dashboard} activeClassName=\"selected\" className=\"link\">Dashboard</NavLink>\r\n                    {/* <NavLink to={ROUTES.landing} activeClassName=\"selected\" className=\"link\">About</NavLink> */}\r\n                    <NavLink to={ROUTES.profile} activeClassName=\"selected\" className=\"link\">Profile</NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import firebase from 'firebase';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyDNjt0ZQR50uFWwvHiLMs3dR3OckvzteLo\",\r\n    authDomain: \"worksafe-630dd.firebaseapp.com\",\r\n    databaseURL: \"https://worksafe-630dd.firebaseio.com\",\r\n    projectId: \"worksafe-630dd\",\r\n    storageBucket: \"worksafe-630dd.appspot.com\",\r\n    messagingSenderId: \"866713004286\"\r\n  };\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config);\r\n}\r\n\r\nexport default firebase;","import firebase from './firebase';\r\n\r\nexport default class FirebaseService {\r\n    constructor() {\r\n        this.db = firebase.firestore().collection(\"reports\");\r\n    }\r\n\r\n    add(data) {\r\n        return this.db.add(data);\r\n    }\r\n\r\n    get(name) {\r\n        let data = []\r\n        return this.db.where(\"name\", \"==\", name).get().then(\r\n            snapshot => {\r\n                snapshot.forEach(snap => data.push({[snap.id]: snap.data()}));\r\n                return data;\r\n            }\r\n        );\r\n    }\r\n\r\n    getAll() {\r\n        let data = []\r\n        return this.db.get().then(\r\n            snapshot => {\r\n                snapshot.forEach(snap => data.push({[snap.id]: snap.data()}));\r\n                return data;\r\n            }\r\n        );\r\n    }\r\n\r\n    \r\n    getByStatus(status) {\r\n        let data = []\r\n        return this.db.where(\"status\", \"==\", status).get().then(\r\n            snapshot => {\r\n                snapshot.forEach(snap => data.push(snap.data()));\r\n                return data;\r\n            }\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport DateTime from 'react-datetime';\r\nimport FirebaseService from '../../Firebase/firebaseService';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {ROUTES} from '../../constants';\r\nimport moment  from 'moment';\r\nimport './Report.scss';\r\nimport '../DateTime.scss';\r\n\r\n\r\nclass Report extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userType: '',\r\n            toDashboard: false\r\n        }\r\n        this.reportInfo = {\r\n            name: 'Jane Doe',\r\n            datetime: '',\r\n            location: '',\r\n            type: '',\r\n            description: '',\r\n            status: \"Awaiting Review\",\r\n        }\r\n        this.firebase = new FirebaseService();\r\n    }\r\n    handleChange(key, value) {\r\n        this.reportInfo[key] =  value;\r\n    }\r\n    checkDate = (curr) => curr - moment(new Date()) <= 0;\r\n    fileReport() {\r\n        this.reportInfo[\"timeFiled\"] = moment().format();\r\n        this.firebase.add(this.reportInfo).then(\r\n            () => this.setState({toDashboard: true})\r\n        )\r\n    }\r\n    render() {\r\n        if (this.state.toDashboard === true) {\r\n            return <Redirect to={ROUTES.profile}/>\r\n        }\r\n        return (\r\n            <div className=\"report\">\r\n                {!this.state.userType ? \r\n                <div className=\"select\">\r\n                    <div className=\"select-btns\">\r\n                        <button className=\"btn\" onClick={() => this.setState({\"userType\": \"bystander\"})}>Bystander</button>\r\n                        <button className=\"btn\" onClick={() => this.setState({\"userType\": \"firstHand\"})}>First Hand</button>\r\n                    </div>\r\n                </div> \r\n                : \r\n                <div className=\"buffer\">\r\n                    <div className=\"form\">\r\n                        <div className=\"name formSection\">\r\n                            <p className=\"label\">Name</p>\r\n                            <p>{this.reportInfo.name}</p>\r\n                        </div>\r\n                        <div className=\"dateTime formSection short\">\r\n                            <div className=\"date\">\r\n                                <p className=\"label\">Date and Approximate Time of Occurence</p>\r\n                                <DateTime onChange={value => this.handleChange(\"datetime\", moment.utc(value).format())} isValidDate={this.checkDate} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"location formSection short\">\r\n                            <p className=\"label\">Location</p>\r\n                            <input type=\"text\" className=\"form-control form-control-sm\" aria-describedby=\"locationInput\"\r\n                                    onChange={evt => this.handleChange(\"location\", evt.currentTarget.value)}></input>\r\n                        </div>\r\n                        <div className=\"type formSection short\">\r\n                            <p className=\"label\">Type of Harassment</p>\r\n                            <select type=\"text\" className=\"form-control form-control-sm\"\r\n                                    onChange={evt => this.handleChange(\"type\", evt.currentTarget.value)}>\r\n                                <option value=\"\" selected disabled hidden>Select Harassment Type</option>\r\n                                <option>Sexual Harassment</option>\r\n                                <option>Workplace Bullying</option>\r\n                                <option>Retaliation</option>\r\n                                <option>Ageism</option>\r\n                                <option>Racial Harassment</option>\r\n                                <option>Disability-Based Harassment</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"bystander formSection short\">\r\n                            <p className=\"label\">{this.state.userType === 'bystander' ? \"Parties \": \"Bystanders\"} Present </p>\r\n                            <input type=\"text\" className=\"form-control form-control-sm\" aria-describedby=\"bystanderInput\"\r\n                                    onChange={evt => {\r\n                                        let field = this.state.userType === 'bystander' ? \"parties \": \"bystanders\"\r\n                                        this.handleChange(field, evt.currentTarget.value)\r\n                                    }}></input>\r\n                        </div>\r\n                        <div className=\"description formSection\">\r\n                            <p className=\"label\">Description *</p>\r\n                            <textarea type=\"text\" className=\"form-control form-control-sm\" rows=\"2\"\r\n                                    onChange={evt => this.handleChange(\"description\", evt.currentTarget.value)}></textarea>\r\n                        </div>\r\n                        <div className=\"evidence formSection short\">\r\n                            <p className=\"label\">Additional Evidence</p>\r\n                            <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"submit\">\r\n                        <button className=\"btn submitBtn\" onClick={() => this.fileReport()}>Submit</button>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Report;","import React from 'react';\r\nimport './Dashboard.scss'\r\n\r\nclass Dashboard extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <p>This is a placeholder for the Dashboard page</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport './Card.scss'\r\nimport moment from 'moment';\r\n\r\nclass Card extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <p className=\"label\">Status:</p>\r\n                <p className=\"content\">{this.props.status}</p>\r\n                <p className=\"label\">Description:</p>\r\n                <p className=\"content\">{this.props.desc}</p>\r\n                <p className=\"label\">Date and Time of Occurence:</p>\r\n                <p className=\"content\">{moment(this.props.datetime).format(\"LLLL\")}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './Profile.scss'\r\nimport FirebaseService from '../../Firebase/firebaseService';\r\nimport Card from './Card/Card';\r\n\r\nclass Profile extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            rows: [],\r\n        };\r\n        this.firebase = new FirebaseService();\r\n        this.fetchData();\r\n    }\r\n    fetchData() {\r\n        this.firebase.get(\"Jane Doe\").then(data => {\r\n            console.log(data);\r\n            let rows = data.map(row => {\r\n                let content\r\n                Object.keys(row).forEach(key => content = row[key])\r\n                return content\r\n            });\r\n            this.setState({\"rows\": rows});\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"reports\">\r\n                    <p className=\"label\">Reports Filed</p>\r\n                    <div>\r\n                        {this.state.rows.map(row => \r\n                            <Card desc={row.description} time={row.datetime} status={row.status}></Card>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport {HashRouter as Redirect, Route} from 'react-router-dom';\r\nimport {ROUTES} from '../constants';\r\nimport Header from './Header/Header';\r\nimport Report from './Report/Report';\r\nimport Dashboard from './Dashboard/Dashboard';\r\nimport Profile from './Profile/Profile';\r\n\r\nclass EmpApp extends Component {\r\n    render() {\r\n        return (\r\n          <div className=\"body\">\r\n            <div>\r\n              <Header></Header>\r\n            </div>\r\n            <div className=\"main\">\r\n              <Route path={ROUTES.empReport} component={Report}/>\r\n              <Route path={ROUTES.profile} component={Profile}/>\r\n              <Route path={ROUTES.dashboard} component={Dashboard}/>\r\n              <Redirect to={ROUTES.empReport}></Redirect>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EmpApp;","import React, { Component } from 'react';\r\nimport reports from '../images/reports.png';\r\nimport validated from '../images/validated.png'\r\nimport './header.css'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1> WorkSafe </h1>\r\n                    <div className=\"tabs\">\r\n                        <button onClick={this.showTable} className=\"tab\">\r\n                            <img src={reports} alt=\"reports\" />\r\n                        </button>\r\n                        <button className=\"tab\" onClick={this.hideTable}>\r\n                            <img src={validated} alt=\"validated\" />\r\n                        </button>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    showTable() {\r\n        document.getElementById(\"table1\").style.display=\"block\";\r\n        document.getElementById(\"table2\").style.display=\"none\";\r\n    }\r\n\r\n    hideTable() {\r\n        document.getElementById(\"table1\").style.display=\"none\";\r\n        document.getElementById(\"table2\").style.display=\"block\";\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './report.css';\r\nimport Header from '../Header/header.js';\r\n\r\nexport default class Report extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header></Header>\r\n                <SingleReport></SingleReport>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SingleReport extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Form></Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Form extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"form\">\r\n                <div id=\"header\">\r\n                    <h3>\r\n                    Report Name\r\n                    </h3>\r\n                    <div>\r\n                        <select>\r\n                            <option selected=\"selected\" value=\"validated\">Validated</option>\r\n                            <option value=\"tbd\">Awaiting Response</option>\r\n                            <option value=\"validated\">Mediation</option>\r\n                            <option value=\"tbd\">Formal Consequences</option>\r\n                            <option value=\"final\">Final Investigative Report Submitted</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"reponse\"> Name:\r\n                    <p> Test User </p>\r\n                </div>\r\n                <div className=\"reponse\"> <p> Date: </p>\r\n                    <p> Date </p>\r\n                </div>\r\n                <div className=\"reponse\"> Type: \r\n                    <p> Type </p>\r\n                </div>\r\n                <div className=\"reponse\"> Description:\r\n                    <p> Description </p>\r\n                </div>\r\n                <div className=\"reponse\"> Your Response:\r\n                    <p> Current Status </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './HRPage.css';\r\nimport Header from '../Header/header.js'\r\nimport Report from '../Report/report.js';\r\nimport {ROUTES} from '../../constants';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport FirebaseService from '../../Firebase/firebaseService';\r\n\r\nexport default class HRPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route path={ROUTES.hrReport} component={Report}></Route>\r\n                </Switch>\r\n                <Header></Header>\r\n                <ReportTable></ReportTable>\r\n                <ResolvedTable></ResolvedTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ReportTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            shouldRedirect: false,\r\n            rows: []\r\n        };\r\n        this.firebase = new FirebaseService();\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({shouldRedirect: true});\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.createRows();\r\n    }\r\n\r\n    handleData(currentRows) {\r\n        this.setState({rows: currentRows});\r\n    }\r\n\r\n    createRows() {\r\n        let currentRows = []\r\n        let statuses = [\"Awaiting Review\", \"Validated\", \"Mediation\", \"Formal Consequences\", \"Final Investigative Report Submitted\"];\r\n        for (var j = 0; j < statuses.length; j++) {\r\n            this.firebase.getByStatus(statuses[j]).then(\r\n                snap => {\r\n                    for (var i = 0; i < snap.length; i++) {\r\n                        var rowid = \"t1row\" + snap[i].datetime + i;\r\n                        currentRows.push(\r\n                            <button key={rowid} onClick={() => this.handleClick()}>\r\n                                <div className=\"rows\">\r\n                                    <div className=\"content\">\r\n                                        <div className=\"head\">\r\n                                            <h2> {snap[i].name} </h2>\r\n                                            <p className={snap[i].status.replace(/\\s+/g, '')}> {snap[i].status} </p>\r\n                                        </div>\r\n                                            <p className=\"date\"> {snap[i].datetime} </p>\r\n                                            <p className=\"type\"> {snap[i].type} </p>\r\n                                    </div>\r\n                                </div>\r\n                            </button>\r\n                        )\r\n                    }\r\n                    this.handleData(currentRows);\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.shouldRedirect) {\r\n            return <Redirect push to={'/report-page'} />\r\n        }\r\n        return (\r\n            <div id=\"table1\">\r\n                {this.state.rows}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ResolvedTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            shouldRedirect: false,\r\n            rows: []\r\n        };\r\n        this.firebase = new FirebaseService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createRows();\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({shouldRedirect: true});\r\n    };\r\n\r\n    handleData(currentRows) {\r\n        this.setState({rows: currentRows});\r\n    }\r\n\r\n    createRows() {\r\n        let currentRows = []\r\n        this.firebase.getByStatus(\"Resolved\").then(\r\n            snap => {\r\n                for (var i = 0; i < snap.length; i++) {\r\n                    var rowid = \"t2row\" + i;\r\n                    currentRows.push(\r\n                        <button key={rowid} onClick={() => this.handleClick()}>\r\n                            <div className=\"rows\">\r\n                                <div className=\"content\">\r\n                                    <div className=\"head\">\r\n                                        <h2> {snap[i].name} </h2>\r\n                                        <p className={snap[i].status.replace(/\\s+/g, '')}> {snap[i].status} </p>\r\n                                    </div>\r\n                                        <p className=\"date\"> {snap[i].datetime} </p>\r\n                                        <p className=\"type\"> {snap[i].type} </p>\r\n                                </div>\r\n                            </div>\r\n                        </button>\r\n                    )\r\n                    if (this.state.shouldRedirect) {\r\n                        return <Redirect push to={'/report-page'} />\r\n                    }\r\n                }\r\n                this.handleData(currentRows);\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"table2\">\r\n                {this.state.rows}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport HRPage from './HRPage/HRPage'\r\n\r\nclass HRApp extends Component {\r\n  render() {\r\n    return (\r\n      <HRPage></HRPage>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HRApp;\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Redirect, Switch, Route} from 'react-router-dom';\r\nimport EmpApp from './EmployeeView/App';\r\nimport HRApp from './HRView/App';\r\nimport {ROUTES} from './constants';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Route path={ROUTES.employee} component={EmpApp}/>\r\n                    <Route path={ROUTES.hr} component={HRApp}/>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/reports.9fdc5bde.png\";","module.exports = __webpack_public_path__ + \"static/media/validated.2143001a.png\";"],"sourceRoot":""}